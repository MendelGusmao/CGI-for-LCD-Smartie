PHP FOR LCD SMARTIE

    This document describes the basic concept and usage of PHP for LCD Smartie.

    The plugin acts as a gateway between LCD Smartie and PHP. Every time it's
    called, it executes the PHP interpreter and returns the data to LCD Smartie
    to show on display. Optionally you can call a function wrote in a script instead
    of executing the entire file. This feature helps you to keep your codes organized
    in just one place.

    It's made in Visual Basic 6.0 but I'm planning to port it to C++ when my knowledge allow.

CONFIGURING

    The first step of configuration is to copy the directory called "scripts" to LCD Smartie
    directory. Inside are three files, main.php, test.php and coretemp.php. The first is the
    most important, because it contains the code necessary to parse the incoming data from $dll
    and perform what it was asked to do. The second is a testfile with some silly functions to
    test if everything's OK and the third is a proof-of-concept of using core temp to register
    data about the machine to a log, read the log with PHP and show it in the display.

    The second step is to configure, setting the PHP interpreter (usually php.exe),
    min refresh rate and timeout in scripts\php.ini:

        [smartie]
        interpreter="c:\php\bin\php.exe"
        timeout=5
        refresh=15000

    Of course, replace the path above by the path of the PHP interpreter on your machine.

    To give some boost in PHP process startup, I decided to include a php.ini in scripts
    directory. This is a stripped version that doesn't make PHP load too many extensions.
    However, if you need to load a specific extension, just uncomment the line, as you would
    do normally.

USING

    There are 2 functions in the plugin.

    The first is the code executor and it has 2 parameters:

        - filename (mandatory)
        - function (optional) and arguments (separated by semicolons), also optional

        > $dll(php,1,filename[.php],[function[#arg1;arg2;...]])

    * The extension ".php" in filename is optional.

    The second shows the PHP version (output of php.exe -v) and has no parameters.

        > $dll(php,2,,)

    There are three possible usages for code executing:

        1 - Executing a PHP file

            > $dll(php,1,file[.php],)

        2 - Executing a function of a PHP file without arguments

            > $dll(php,1,file[.php],function)

        3 - Executing a function of a PHP file with arguments

            > $dll(php,1,file[.php],function#arg1;arg2;argX)

WRITING SCRIPTS

    Create a .php file in scripts directory with the following lines:

    <?php

	// your code here

	main();

    ?>

    Since version 0.2, there is no need to include scripts\main.php in your file and
    doing that will cause an error.

ISSUES

    Due to a bug (it's not a bug, it's a feature!) of LCD Smartie, the program awaits
    for the end of the execution of the plugin code before showing any data on the display.
    If a programming error, race condition, infinite loop or something else causes freezing
    of the PHP interpreter, the plugin will freeze, waiting for PHP process to terminate and
    then, LCD Smartie will be freezing too. My idea is to implement a watchdog timer, then, in
    case the PHP process take more time than the chosen value of timeout, it will be instantly
    killed and the plugin will return an empty string or an error message.

    I'm not sure if it's a problem of PHP interpreter, of the plugin or LCD Smartie,
    but when using the plugin, the LCD Smartie goes slow. For a test with a script
    that contains 4 functions (monitoring of some bot applications), it was really slow and
    sometimes the screen appeared for just 1 second before the next screen. I tried to
    fix it with the stripped php.ini.

FINALLY

    if ($questions || $suggestions)
        send_email("mendelsongusmao+github@gmail.com");

    (Text corrections are welcome too, since english is not my native language).